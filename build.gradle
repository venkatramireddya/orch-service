plugins {
	id 'org.springframework.boot' version '2.5.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.ttech'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	mavenLocal()
}

ext {
  set('springCloudVersion', "2020.0.3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.apache.httpcomponents:httpclient'
	implementation 'org.springdoc:springdoc-openapi-ui:1.4.3'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	//resilience4j
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'io.github.resilience4j:resilience4j-spring-boot2:1.7.0'
	implementation 'io.github.resilience4j:resilience4j-annotations:1.7.0'
	implementation 'io.github.resilience4j:resilience4j-circuitbreaker:1.7.0'
	
	//hazelcast
	implementation 'com.hazelcast:hazelcast:4.2'
	implementation 'com.hazelcast:hazelcast-spring:4.2'
	implementation 'com.hazelcast:hazelcast-kubernetes:2.2.2'
	//implementation 'com.ttech:ttech-jwt-spring-boot-starter:0.0.1-SNAPSHOT'
	implementation 'org.springframework.boot:spring-boot-starter-security:2.5.2'
	
	//OWASP
	 implementation ('org.owasp.esapi:esapi:2.2.3.1') {
	  exclude group : 'org.slf4j', module: 'slf4j-simple'
	  exclude group : 'log4j', module: 'log4j'
	 }
	 implementation 'org.jsoup:jsoup:1.14.1'
	 implementation 'commons-io:commons-io:2.11.0'
	
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}


test {
	useJUnitPlatform()
}
